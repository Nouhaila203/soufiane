pipeline {
    agent any

    triggers {
        githubPush()
    }

    tools {
        sonarqube 'SonarQube Scanner'
    }

    environment {
        // Set the SonarQube server name configured in Jenkins
        SONARQUBE_SERVER = 'YourSonarQubeServerName'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/groupepfadevops/contr-le-de-moteur.git'
            }
        }
        stage('Setup') {
            steps {
                bat 'python -m ensurepip --upgrade || echo Pip already installed'
            }
        }
        stage('Build') {
            steps {
                bat 'pip install -r requirements.txt --user'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube Server') {
                    bat 'sonar-scanner -Dsonar.projectKey=myproject -Dsonar.sources=src -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_AUTH_TOKEN'
                }
            }
        }
        stage('Test') {
            steps {
                bat 'python -m unittest discover -s src'
            }
        }
        stage('Deploy') {
            steps {
                bat 'deploy.bat'
            }
        }
    }
    post {
        always {
            junit 'test-reports/*.xml'
            script {
                def qg = waitForQualityGate()
                if (qg.status != 'OK') {
                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
                }
            }
        }
    }
}
